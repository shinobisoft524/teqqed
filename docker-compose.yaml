services:
  nextjs:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      #- DATABASE_URL=postgresql://postgres:1234@db:5432/teqqed?schema=public
      #- POSTGRES_URL=postgresql://postgres:1234@db:5432/teqqed?schema=public
      #- POSTGRES_URL_NON_POOLING=postgresql://postgres:1234@db:5432/teqqed?schema=public

      - DATABASE_URL=postgresql://teqqed_owner:************@ep-calm-fire-a2d7wcod.eu-central-1.aws.neon.tech/teqqed?sslmode=require
      - POSTGRES_URL=postgresql://teqqed_owner:************@ep-calm-fire-a2d7wcod.eu-central-1.aws.neon.tech/teqqed?sslmode=require
      - POSTGRES_URL_NON_POOLING=postgresql://teqqed_owner:************@ep-calm-fire-a2d7wcod.eu-central-1.aws.neon.tech/teqqed?sslmode=require
      - AUTH_SECRET=aac48e16a8633b2c60a5632aabdc7124
    depends_on:
      - db
    networks:
      - teqqed
    #command: npm run start # Use "npm start" if you want to run in production mode

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: teqqed
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - teqqed

volumes:
  postgres_data:

networks:
  teqqed:
    driver: bridge 